name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request: {}
  workflow_dispatch:
    inputs:
      version:
        description: Release version (e.g. v0.1.0)
        required: false

env:
  # Common versions
  GO_VERSION: '1.23.6'
  GOLANGCI_VERSION: 'v1.62.0'
  DOCKER_BUILDX_VERSION: 'v0.23.0'

  IMAGE_NAME: ghcr.io/${{ github.repository }}
  IMAGE_VERSION: ${{ inputs.version }}

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false  # The golangci-lint action does its own caching.

      - name: Check go mod tidy
        run: go mod tidy && git diff --exit-code go.mod go.sum

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_VERSION }}

  unit-test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run Unit Tests
        run: go test -v -cover ./...

  build-and-push:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: true
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ env.DOCKER_BUILDX_VERSION }}
          install: true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # If a version wasn't explicitly passed as a workflow_dispatch input we
      # default to version v0.0.0-<git-commit-date>-<git-short-sha>, for example
      # v0.0.0-20231101115142-1091066df799. This is a simple implementation of
      # Go's pseudo-versions: https://go.dev/ref/mod#pseudo-versions.
      - name: Set Default Multi-Platform Image Version
        if: env.IMAGE_VERSION == ''
        run: echo "IMAGE_VERSION=v0.0.0-$(date -d@$(git show -s --format=%ct) +%Y%m%d%H%M%S)-$(git rev-parse --short=12 HEAD)" >> $GITHUB_ENV

      - name: Build and Push Multi-Platform OCI Image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: image
          build-args:
            GO_VERSION=${{ env.GO_VERSION }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}